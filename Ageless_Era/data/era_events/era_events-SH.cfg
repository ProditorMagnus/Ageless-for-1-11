#textdomain wesnoth-Ageless_Era

### | Steelhive Code

#define STEELHIVE_ERA_EVENTS
    #steelhive_era_events

    #drain event
    [event]
        name=defender hits
        first_time_only=no
        [filter_second_attack]
            special=steelhive_drain
        [/filter_second_attack]
        [filter]
            [not]
                [filter_wml]
                    [modifications]
                        [trait]
                            id="undead"
                        [/trait]
                    [/modifications]
                [/filter_wml]
            [/not]
        [/filter]
        [if]
            [have_unit]
                id=$unit.id
                [filter_wml]
                    [modifications]
                        [trait]
                            id="mechanical"
                        [/trait]
                    [/modifications]
                [/filter_wml]
            [/have_unit]
            [then]
                {VARIABLE drained 0.5}
            [/then]
            [else]
                {VARIABLE drained 0.25}
            [/else]
        [/if]
        {VARIABLE_OP drained multiply $damage_inflicted}
        {VARIABLE_OP drained round floor}
        {VARIABLE_OP second_unit.hitpoints add $drained}
        [unstore_unit]
            variable=second_unit
            text=$drained
            {COLOR_HEAL}
        [/unstore_unit]
    [/event]
    [event]
        name=attacker hits
        first_time_only=no
        [filter_attack]
            special=steelhive_drain
        [/filter_attack]
        [filter_second]
            [not]
                [filter_wml]
                    [modifications]
                        [trait]
                            id="undead"
                        [/trait]
                    [/modifications]
                [/filter_wml]
            [/not]
        [/filter_second]
        [if]
            [have_unit]
                id=$second_unit.id
                [filter_wml]
                    [modifications]
                        [trait]
                            id="mechanical"
                        [/trait]
                    [/modifications]
                [/filter_wml]
            [/have_unit]
            [then]
                {VARIABLE drained 0.5}
            [/then]
            [else]
                {VARIABLE drained 0.25}
            [/else]
        [/if]
        {VARIABLE_OP drained multiply $damage_inflicted}
        {VARIABLE_OP drained round floor}
        {VARIABLE_OP unit.hitpoints add $drained}
        [unstore_unit]
            variable=unit
            text=$drained
            {COLOR_HEAL}
        [/unstore_unit]
    [/event]

    #lightshifter gets to know recruited and advanced units, and leader units.

    [event]
        name=start
        [store_unit]
            [filter]
                race=steelhive
                canrecruit=yes
            [/filter]
            kill=no
            variable=leader_known
        [/store_unit]
        {FOREACH leader_known i}
            {VARIABLE player$leader_known[$i].side|_knowsunit.$leader_known[$i].type 1}
        {NEXT i}
        {CLEAR_VARIABLE leader_known}
    [/event]
    [event]
        name=recruit
        first_time_only=no
        [filter]
            race=steelhive
        [/filter]
        {VARIABLE player$side_number|_knowsunit.$unit.type 1}
    [/event]
    [event]
        name=post advance
        first_time_only=no
        [filter]
            race=steelhive
        [/filter]
        {VARIABLE player$side_number|_knowsunit.$unit.type 1}
    [/event]

    # knockback
    [event]
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=knockback
        [/filter_attack]

        [filter_second]
            [not]
                [filter_location]
                    terrain=*^V*
                [/filter_location]
            [/not]
        [/filter_second]

        [if]
            [variable]
                name=second_unit.hitpoints
                greater_than=0
            [/variable]

            [then]
                [if]
                    [have_unit]
                        x,y=$x1,$y1
                        [filter_adjacent]
                            x,y=$x2,$y2
                            adjacent=n
                        [/filter_adjacent]
                    [/have_unit]
                    [then]
                        {VARIABLE knockback_direction n}
                    [/then]
                    [else]
                        [if]
                            [have_unit]
                                x,y=$x1,$y1
                                [filter_adjacent]
                                    x,y=$x2,$y2
                                    adjacent=ne
                                [/filter_adjacent]
                            [/have_unit]
                            [then]
                                {VARIABLE knockback_direction ne}
                            [/then]
                            [else]
                                [if]
                                    [have_unit]
                                        x,y=$x1,$y1
                                        [filter_adjacent]
                                            x,y=$x2,$y2
                                            adjacent=se
                                        [/filter_adjacent]
                                    [/have_unit]
                                    [then]
                                        {VARIABLE knockback_direction se}
                                    [/then]
                                    [else]
                                        [if]
                                            [have_unit]
                                                x,y=$x1,$y1
                                                [filter_adjacent]
                                                    x,y=$x2,$y2
                                                    adjacent=s
                                                [/filter_adjacent]
                                            [/have_unit]
                                            [then]
                                                {VARIABLE knockback_direction s}
                                            [/then]
                                            [else]
                                                [if]
                                                    [have_unit]
                                                        x,y=$x1,$y1
                                                        [filter_adjacent]
                                                            x,y=$x2,$y2
                                                            adjacent=sw
                                                        [/filter_adjacent]
                                                    [/have_unit]
                                                    [then]
                                                        {VARIABLE knockback_direction sw}
                                                    [/then]
                                                    [else]
                                                        [if]
                                                            [have_unit]
                                                                x,y=$x1,$y1
                                                                [filter_adjacent]
                                                                    x,y=$x2,$y2
                                                                    adjacent=nw
                                                                [/filter_adjacent]
                                                            [/have_unit]
                                                            [then]
                                                                {VARIABLE knockback_direction nw}
                                                            [/then]
                                                        [/if]
                                                    [/else]
                                                [/if]
                                            [/else]
                                        [/if]
                                    [/else]
                                [/if]
                            [/else]
                        [/if]
                    [/else]
                [/if]

                [store_locations]
                    [not]
                        [filter]
                        [/filter]
                    [/not]

                    [filter_adjacent_location]
                        x,y=$x2,$y2
                        adjacent=-$knockback_direction
                    [/filter_adjacent_location]

                    variable=knockback_target_hex
                [/store_locations]

                [if]
                    [variable]
                        name=knockback_target_hex.length
                        greater_than=0
                    [/variable]

                    [then]
                        [teleport]
                            [filter]
                                x,y=$x2,$y2
                            [/filter]

                            x,y=$knockback_target_hex.x,$knockback_target_hex.y
                            ignore_passability=no
                        [/teleport]

                        [if]
                            [have_unit]
                                x,y=$knockback_target_hex.x,$knockback_target_hex.y
                            [/have_unit]

                            [then]
                                [sound]
                                    name=fist.ogg
                                [/sound]

                                # the knockbacked unit doesn't seem to receive experience by default,
                                # so we need to add it manually
                                [store_unit]
                                    [filter]
                                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                                    [/filter]

                                    kill=yes
                                    variable=knockbacked
                                [/store_unit]

                                {VARIABLE_OP knockbacked.experience add $unit.level}

                                [unstore_unit]
                                    variable=knockbacked
                                    text= _ "knockback"
                                    {COLOR_HARM}
                                    advance=true
                                [/unstore_unit]

                                {CLEAR_VARIABLE knockbacked}
                            [/then]
                        [/if]
                    [/then]
                [/if]

                {CLEAR_VARIABLE knockback_direction,knockback_target_hex}
            [/then]
        [/if]
    [/event]

#enddef

#define WEAPON_SPECIAL_STEELHIVE_PRECISION
    [chance_to_hit]
        id=steelhive_precision
        name= _ "laser precision"
        description= _ "This attack uses laser precision (80% chance to hit)"
        value=80
        cumulative=no
    [/chance_to_hit]
#enddef

#define WEAPON_SPECIAL_KNOCKBACK
    [knockback]
        id=knockback
        name= _ "knockback"
        female_name= _ "female^knockback"
        description=_ "When a unit is hit with a knockback attack, it is immediately pushed back one hex away from the attacker. Units cannot be knocked back into an occupied hex, out of villages or onto terrain they normally could not move to. Only works on offense."
    [/knockback]
#enddef
