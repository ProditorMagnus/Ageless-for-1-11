#textdomain wesnoth-Archaic_Era

########## Traits    ####################

#define ARCHAIC_TRAIT_PHANTOM
    # Units with trait Phantom cannot be drained, poisoned or plagued.  This is just cosmetic <- no it's not, but is 'not_living' being deprecated?  It's not in mainline anymore
    [trait]
        id=aa_phantom
        availability="musthave"
        male_name= _ "phantom"
        female_name= _ "female^phantom"
        description={STR_NONLIVING_DESCRIPTION}
        [effect]
            apply_to=status
            add=not_living
        [/effect]
    [/trait]
#enddef

#define ARCHAIC_TRAIT_ZEALOUS
    # Units with trait Loyal have no upkeep.
    [trait]
        id=aa_zealous
        male_name= _ "zealous"
        female_name= _ "female^zealous"
        description={STR_ZERO_UPKEEP}
        [effect]
            apply_to=loyal
        [/effect]
        [effect]
            apply_to=max_experience
            increase=30%
        [/effect]
        [effect]
            apply_to=attack
            range=melee
            increase_damage=1
        [/effect]
    [/trait]
#enddef

########## Abilities ####################

#define TRI_WEAPON_SPECIAL_ASSIMILATION

    [plague]
        id=plague_assimilation
        name= _ "assimilation"
        description= _ "When a humanoid is killed by an Assimilation attack, that unit is replaced with a Cyborg on the same side as the unit with the Assimilation attack."
        type=Tri_Mech_Cyborg
        [filter_opponent]
            race=thrall_khthon,human,orc,dwarf,elf,south-seas_human,ukian,goblin,primevalist_human
        [/filter_opponent]
    [/plague]

#enddef

#define ARCHAIC_WEAPON_SPECIAL_EMBALM
    [plague]
        id=ae_embalm
        name= _ "embalm"
        description= _ "When a unit is killed by an embalm attack, that unit is replaced with a mummy of the attacker's side."
        type=Tomb Mummy
    [/plague]
#enddef

# this is lame, it should be changed...
#define ARCHAIC_ABILITY_DANCER
    # Canned definition of Dancer ability to be included in an
    # [abilities] clause.
    [resistance]
        id=aa_dance
        multiply=2
        max_value=60
        # applies to any type if we leave it out, so don't leave it out
        apply_to=blade,pierce,impact
        [filter_base_value]
            greater_than=0
            less_than=60
        [/filter_base_value]
        name= _ "dancer"
        female_name= _ "female^dancer"
        description= _ "Dancer:
This unit's physical (pierce, impact, blade) resistances are doubled, up to a maximum of 60%, when attacking because the enemy cannot get a direct hit."
        affect_self=yes
        active_on=offense
    [/resistance]
#enddef

#define ARCHAIC_ABILITY_DOG_TRAINER AMT
    [leadership]
        id=leadership
        value={AMT}
        cumulative=no
        name= _ "dog trainer"
        female_name= _ "female^dog trainer"
        description= _ "This unit can lead Ukian Dogs that are next to it, making them fight better."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                race="ukiandog"
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ARCHAIC_ABILITY_TRINKETS
    # Canned definition of the heal+amt ability to be included in an [abilities] clause.
    [heals]
        #        value=0
        id=aa_trinkets
        affect_allies=no
        name= _ "anti-poison"
        female_name= _ "female^anti-poison"
        description=  _ "Allows the unit to avoid the effects of poison, but the poisoned unit cannot be cured of its poison by this ability, and must seek the care of a village or a unit that can cure."
        affect_self=yes
        poison=slowed
        #        [affect_adjacent]
        #            adjacent=n,ne,se,s,sw,nw
        #        [/affect_adjacent]
    [/heals]
#enddef

#define ARCHAIC_ABILITY_HEALS AMT
    # Canned definition of the heal+amt ability to be included in an [abilities] clause.
    [heals]
        value={AMT}
        id=aa_healing
        affect_allies=yes
        name= _ "heals +"+"{AMT}"
        female_name= _ "female^heals +"+"{AMT}"
        description=  _ "Allows the unit to heal adjacent allied units at the beginning of our turn.

A unit cared for by this healer may heal up to {AMT} HP per turn, or stop poison from taking effect for that turn.
A poisoned unit cannot be cured of its poison by a healer, and must seek the care of a village or a unit that can cure."
        affect_self=no
        poison=slowed
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/heals]
#enddef

#define ARCHAIC_ABILITY_IMMORTAL
    # Canned definition of Immortal ability to be included in an
    # [abilities] clause.
    [regenerate]
        value=99
        id=aa_immortal
        name= _ "immortal"
        female_name= _ "female^immortal"
        description= _ "This unit heals 99 HP per turn.  If poisoned, it will remove the poison."
        affect_self=yes
        poison=cured
    [/regenerate]
#enddef

#define ARCHAIC_ABILITY_INTANGIBLE
    [dummy]
        id=aa_intangible
        name= _ "intangible"
        female_name= _ "female^intangible"
        description=_ "This unit uses only one movement point per attack, rather than all of its movement points like most other units."
    [/dummy]
#enddef

#define ARCHAIC_ABILITY_AQUALUNG
    [hides]
	id=aa_aqualung
	name=_"aqualung"
	female_name=_"female^aqualung"
	description=_"This unit can move underwater, unobserved by opponents, in either deep water or swamps.  While they can move under shallow water too, there is no way to hide, so they are visible to opponents."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=Ss*^*,Sm*^*,Chs*^*,Khs*^*,Wo*^*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define ARCHAIC_WEAPON_SPECIAL_STONEGRIP

    [petrifies]
        id=aa_stonegrip
        name= _ "stone grip"
        description= _ "This attack petrifies the target and the attacker, turning them to stone.  Units that have been petrified may not move or attack.  The player controlling the attacker can release both units via the context menu."
    [/petrifies]
#enddef

# wmllint: unbalanced-on
#define ARCHAIC_ABILITY_STONE
    # Put this in an [abilities]
    [resistance]
        id=aa_stone
        name= _ "stone"
        female_name= _ "female^stone"
        description=_ "This unit is stone in the daylight, if not next to an ally or in a village, but is always mobile at night."
        multiply=2
        max_value=50
        # applies to any type if we leave it out
        #apply_to=blade,pierce,impact,fire,cold,arcane
        [filter_base_value]
            greater_than=0
            less_than=50
        [/filter_base_value]
        affect_self=yes
        active_on=defense
    [/resistance]
# wmlxgettext: [abilities]
[/abilities]

[event]
    name=new turn
    first_time_only=no
    id=aa_stone_night
    [store_unit]
        [filter]
            ability=aa_stone
	    [filter_wml]
		[variables]
		    victim=aaa
		[/variables]
	    [/filter_wml]
            [and]
                [filter_location]
                    time_of_day=chaotic
                [/filter_location]
                [or]
                    [filter_adjacent]
                        is_enemy=no
                    [/filter_adjacent]
                [/or]
            [/and]
        [/filter]
        kill=yes
        variable=unstone_temp
    [/store_unit]
    {FOREACH unstone_temp i}
        #	[message]
        #	speaker=narrator
        #	message="$unstone_temp[$i].name"
        #	[/message]
        [set_variable]
            name=unstone_temp[$i].status.petrified
            value=no
        [/set_variable]
        [unstore_unit]
            variable=unstone_temp[$i]
            find_vacant=no
        [/unstore_unit]
    {NEXT i}
    {CLEAR_VARIABLE unstone_temp}
[/event]

[event]
    name=new turn
    id=aa_stone_day
    first_time_only=no
    [store_unit]
        [filter]
            ability=aa_stone
            [filter_location]
                time_of_day=lawful
            [/filter_location]
            [not]
                [filter_adjacent]
                    is_enemy=no
                [/filter_adjacent]
            [/not]
            [not]
                [filter_location]
                    terrain=*^V*
                [/filter_location]
            [/not]
        [/filter]
        kill=yes
        variable=stone_temp
    [/store_unit]
    {FOREACH stone_temp i}
        [set_variable]
            name=stone_temp[$i].status.petrified
            value=yes
        [/set_variable]
        [unstore_unit]
            variable=stone_temp[$i]
            find_vacant=no
        [/unstore_unit]
    {NEXT i}
    {CLEAR_VARIABLE unstone_temp}
[/event]

    [event]
        name=recruit,recall,start
	first_time_only=no
	id=aa_stone_initial
	[filter]
	    [filter_attack]
		name=stone_hand
	    [/filter_attack]
	[/filter]
	[store_unit]
	   [filter]
		id=$unit.id
	   [/filter]
	   variable=stoner
	[/store_unit]
	[set_variable]
	   name=stoner.variables.victim
	   value=aaa
	[/set_variable]
	[unstore_unit]
	   variable=stoner
	[/unstore_unit]
    [/event]

    [event]
	name=attacker_hits
	first_time_only=no
	id=aa_stone_attack
	    [filter_attack]
		name=stone_hand
	    [/filter_attack]
	[store_unit]
	   [filter]
		id=$unit.id
	   [/filter]
	   variable=stoner
	   kill=no
	[/store_unit]
	[set_variable]
	   name=stoner.variables.victim
	   value=$second_unit.id
	[/set_variable]
	[unstore_unit]
	    variable=stoner
	[/unstore_unit]
	[petrify]
	   id=$unit.id
	[/petrify]
	[item]
	    halo=halo/elven/nature-halo[1~8].png~CS(-200,-200,-200):200
	    x=$x1,$x2
	    y=$y1,$y2
	[/item]
# need to account for case where victim dies
#	[event]
#	    name=die
#	    first_time_only=no
#	    [filter]
		
        [set_menu_item]
            id=aa_stone_release
            image=misc/petrified.png
            description=_"release victim"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    ability=aa_stone
		    [not]
		    [filter_wml]
			[variables]
			victim=aaa
			[/variables]
		    [/filter_wml]
		    [/not]
                [/have_unit]
            [/show_if]
            [command]
		[store_unit]
		    [filter]
                    x,y=$x1,$y1
                    ability=aa_stone
		    [/filter]
		    variable=st_unit
		    kill=no
		[/store_unit]
		[store_unit]
		    [filter]
			id=$st_unit.variables.victim
		    [/filter]
		    variable=st_victim
		    kill=no
		[/store_unit]
		[unpetrify]
		   id=$st_unit.variables.victim
		[/unpetrify]
		[set_variable]
		    name=st_unit.variables.victim
		    value=aaa
		[/set_variable]
		[unstore_unit]
		    variable=st_unit
		    text=_"Grip Released"
		    red,green,blue=120,120,120
		[/unstore_unit]
		[unpetrify]
		   id=$st_unit.id
		[/unpetrify]
		[remove_item]
		    halo=halo/elven/nature-halo[1~8].png~CS(-200,-200,-200):200
		    x=$x1,$st_victim.x
		    y=$y1,$st_victim.y
		[/remove_item]
		{CLEAR_VARIABLE st_unit}
		{CLEAR_VARIABLE st_victim}
            [/command]
        [/set_menu_item]
    [/event]
	   

[+abilities]
# wmlxgettext: [/abilities]
#enddef
# wmllint: unbalanced-off

#define ARCHAIC_STONE_EVENTS


# old mechanism.  Was not really intuitive
#ifdef __UNUSED__
    # initialize unit variable 'number_victims'
    [event]
        name=recruit,recall,start
	id=aa_stone_init
        first_time_only=no
        [filter]
            ability=aa_stone
        [/filter]
        [store_unit]
            [filter]
                ability=aa_stone
            [/filter]
            variable=statue_hurt
            kill=yes
        [/store_unit]
        {VARIABLE unit_index_temp 0}
        [while]
            [variable]
                name=unit_index_temp
                less_than=$statue_hurt.length
            [/variable]
            [do]
                [if]
                    [variable]
                        name=statue_hurt[$unit_index_temp].variables.number_victims
                        greater_than=-1
                    [/variable]
                    [else]
                        [set_variable]
                            name=statue_hurt[$unit_index_temp].variables.number_victims
                            value=0
                        [/set_variable]
                    [/else]
                [/if]
                [unstore_unit]
                    variable=statue_hurt[$unit_index_temp]
                    find_vacant=no
                [/unstore_unit]
                [set_variable]
                    name=unit_index_temp
                    add=1
                [/set_variable]
            [/do]
        [/while]
        {CLEAR_VARIABLE unit_index_temp}
        {CLEAR_VARIABLE statue_hurt}
    [/event]

    # flag the stoned units, add 1 to statue's 'number_victims'
    [event]
        name=attacker_hits
	id=aa_stone_stonehit
        first_time_only=no
        [filter_attack]
            name=stone_hand
        [/filter_attack]
        [filter_second]
            # statues shouldn't get stoned
            [not]
                ability=aa_stone
            [/not]
            # leaders shouldn't get stoned
            # As an [or], this did not work, try [and] ... seems to work.
            [and]
                [not]
                    canrecruit=yes
                [/not]
            [/and]
        [/filter_second]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            kill=no
            variable=stone_attacker
        [/store_unit]
        [store_unit]
            [filter]
                x,y=$x2,$y2
            [/filter]
            kill=no
            variable=stone_victim
        [/store_unit]
	

        # the statues shouldn't continue to get hurt if the unit dies and cannot be released
        [if]
            [variable]
                name=caught_temp.hitpoints
                less_than=1
            [/variable]
            # maybe this is not the way to do it
# #ifdef ___UNUSED___
            [then]
                [set_variable]
                    name=caught_temp.hitpoints
                    value=2
                [/set_variable]
                [set_variable]
                    name=caught_temp.status.petrified
                    value=yes
                [/set_variable]
            [/then]
# #endif
            # stick all the rest in an [else]
            [else]
                [set_variable]
                    name=caught_temp.variables.caught
                    value=$stoner_temp.id
                [/set_variable]
                [set_variable]
                    name=stoner_temp.variables.number_victims
                    add=1
                [/set_variable]
                [unstore_unit]
                    variable=stoner_temp
                    find_vacant=no
                [/unstore_unit]
                [unstore_unit]
                    variable=caught_temp
                    find_vacant=no
                [/unstore_unit]
            [/else]
        [/if]
        {CLEAR_VARIABLE stoner_temp}
        {CLEAR_VARIABLE caught_temp}
    [/event]

    # leaders  and statues should not get stoned
    # Is this event really needed?
    [event]
        name=attack_end
	id=aa_stone_leaderbackup
        first_time_only=no
        [filter_attack]
            name=stone_hand
        [/filter_attack]
        [filter_second]
            canrecruit=yes
            [or]
                ability=aa_stone
            [/or]
        [/filter_second]
        [store_unit]
            [filter]
                x,y=$x2,$y2
            [/filter]
            kill=yes
            variable=stone_leader
        [/store_unit]
        [set_variable]
            name=stone_leader.status.petrified
            value=no
        [/set_variable]
        [unstore_unit]
            variable=stone_leader
        [/unstore_unit]
        {CLEAR_VARIABLE stone_leader}
    [/event]

    # The statues take damage every turn for the number of units they hold
    [event]
        name=new turn
	id=aa_stone_stonerhurt
        first_time_only=no
        [store_unit]
            [filter]
                ability=aa_stone
            [/filter]
            variable=stoner_temp
            kill=yes
        [/store_unit]
        {FOREACH stoner_temp i}
            [if]
                [variable]
                    name=stoner_temp[$i].variables.number_victims
                    greater_than=0
                [/variable]
                [then]
                    [set_variable]
                        name=stoner_damage_temp
                        value=$stoner_temp[$i].variables.number_victims
                    [/set_variable]
                    [set_variable]
                        name=stoner_damage_temp
                        multiply=3
                    [/set_variable]
                    [set_variable]
                        name=stoner_temp[$i].hitpoints
                        add=-$stoner_damage_temp
                    [/set_variable]
                    [unstore_unit]
                        variable=stoner_temp[$i]
                        find_vacant=no
                        text="$stoner_damage_temp|"
                        red,green,blue=255,0,0
                    [/unstore_unit]
                [/then]
                [else]
                    [unstore_unit]
                        variable=stoner_temp[$i]
                        find_vacant=no
                    [/unstore_unit]
                [/else]
            [/if]
        {NEXT i}
        {CLEAR_VARIABLE stoner_temp}
        {CLEAR_VARIABLE stoner_damage_temp}
    [/event]

    # right-click option to free the captured units
    [event]
        name=start,side turn
	id=aa_stone_rtclick
        first_time_only=no
        [set_menu_item]
            id=aa_stone_release
            image=misc/petrified.png
            description=_"release stoned victims"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    ability=aa_stone
                [/have_unit]
            [/show_if]
            [command]
                [store_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    variable=stoner_temp
                    kill=yes
                [/store_unit]
                [store_unit]
                    [filter]
                        [filter_wml]
                            [variables]
                                # I'm not sure if variable substitution works here - seems it does
                                caught=$stoner_temp.id
                            [/variables]
                        [/filter_wml]
                    [/filter]
                    variable=caught_temp
                    kill=yes
                [/store_unit]
                {FOREACH caught_temp i}
                    [set_variable]
                        name=caught_temp[$i].status.petrified
                        value=no
                    [/set_variable]
                    [unstore_unit]
                        variable=caught_temp[$i]
                        find_vacant=no
                        text=_"Free"
                        red,green,blue=200,200,200
                    [/unstore_unit]
                {NEXT i}
                [set_variable]
                    name=stoner_temp.variables.number_victims
                    value=0
                [/set_variable]
                [unstore_unit]
                    variable=stoner_temp
                    find_vacant=no
                [/unstore_unit]
                {CLEAR_VARIABLE caught_temp}
                {CLEAR_VARIABLE stoner_temp}
            [/command]
        [/set_menu_item]
    [/event]

    # The captured units become free when the guy that
    # stoned them dies.
    [event]
        name=die
	id=aa_stone_freewhendies
        first_time_only=no
        [filter]
            ability=aa_stone
        [/filter]
        [store_unit]
            [filter]
                [filter_wml]
                    [variables]
                        caught=$unit.id
                    [/variables]
                [/filter_wml]
            [/filter]
            variable=caught_temp
            kill=yes
        [/store_unit]
        {FOREACH caught_temp i}
            [set_variable]
                name=caught_temp[$i].status.petrified
                value=no
            [/set_variable]
            [unstore_unit]
                variable=caught_temp[$i]
                find_vacant=no
                text=_"Free"
                red,green,blue=200,200,200
            [/unstore_unit]
        {NEXT i}
        {CLEAR_VARIABLE caught_temp}
    [/event]
#endif
#enddef

#define ARCHAIC_WEAPON_SPECIAL_FOG
    [chance_to_hit]
        id=aa_fog
        name= _"mind fog"
        description= _ "This attack always has a 70% chance to hit regardless of the defensive ability of the unit being attacked.
The opponent is enveloped in an opaque fog and cannot see very well, so their ability to cast the spell, and hence their chance to hit, is reduced."
        value=70
        cumulative=no
        apply_to=self
    [/chance_to_hit]
#enddef

#define ARCHAIC_FOG_CHANCE_TO_HIT

    [event]
        name=attack
        first_time_only=no

        [filter_attack]
            special=aa_fog   
        [/filter_attack]
        [filter_second_attack]
            special=magical   
        [/filter_second_attack]

	[fire_event]
	    name=aa_fog_event
	    [primary_unit]
		id=$second_unit.id
	    [/primary_unit]
	[/fire_event]
    [/event]
    [event]
        name=attack
        first_time_only=no

        [filter_attack]
            special=magical   
        [/filter_attack]
        [filter_second_attack]
            special=aa_fog
        [/filter_second_attack]

	[fire_event]
	    name=aa_fog_event
	    [primary_unit]
		id=$unit.id
	    [/primary_unit]
	[/fire_event]
    [/event]

    [event]
	name=aa_fog_event
	first_time_only=no
	   # lifted from mainline FORCE_CHANCE_TO_HIT macro, maybe some of this is not necessary

                {FOREACH unit.attack i}
                    [if]
                        #This is to mute a warning message about retrieving a member of non-existant wml container.
                        [variable]
                            name=unit.attack[$i].specials.length
                            greater_than=0
                        [/variable]

                        [variable]
                            name=unit.attack[$i].specials.chance_to_hit.length
                            greater_than=0
                        [/variable]

                        [then]
                            [set_variables]
                                name=unit.attack[$i].specials.original_chance_to_hit
                                to_variable=unit.attack[$i].specials.chance_to_hit  
                            [/set_variables]

                            {CLEAR_VARIABLE unit.attack[$i].specials.chance_to_hit}
                        [/then]
                    [/if]

                   [set_variables]
                        name=unit.attack[$i].specials.chance_to_hit

                        [value]
                            id=forced_cth
                            value=20
                            cumulative=no
                        [/value]
                    [/set_variables]
                {NEXT i}

# to make sure it works on both attacker & defender
		[set_variable]
		    name=fog_unit_id
		    value=$unit.id
		[/set_variable]

                [unstore_unit]
                    variable=unit
                    find_vacant=no
		    text=_"Mind Fogged"
		    red,green,blue=45,120,200
                [/unstore_unit]   

                [event]
                    name=attack end
                    delayed_variable_substitution=yes

			[store_unit]
			    [filter]
				id=$fog_unit_id
			    [/filter]
			    variable=f_unit
			    kill=no
			[/store_unit]
                    {FOREACH f_unit.attack i}
                        {CLEAR_VARIABLE f_unit.attack[$i].specials.chance_to_hit}

                        [set_variables]
                            name=f_unit.attack[$i].specials.chance_to_hit
                            to_variable=f_unit.attack[$i].specials.original_chance_to_hit
                        [/set_variables]

                        {CLEAR_VARIABLE f_unit.attack[$i].specials.original_chance_to_hit}
                    {NEXT i}

                    [unstore_unit]
                        variable=f_unit
                        find_vacant=no
                    [/unstore_unit]   
		    {CLEAR_VARIABLE f_unit}
		    {CLEAR_VARIABLE fog_unit_id}
                [/event]
    [/event] 
#enddef


#define ARCHAIC_WEAPON_SPECIAL_TIE
    [chance_to_hit]
        id=aa_tie
        name= _ "wind-up"
        description= _ "The unit has a greater chance of landing a successful blow if the enemy is distracted.  Similar to Thief's backstab, but affects chance to hit instead of damage."
        value=80
        cumulative=no
        active_on=offense
        backstab=yes
    [/chance_to_hit]
    [slows]
        id=slow
        name= _ "slows"
        description= _ "This attack slows the target until it ends a turn. Slow halves the damage caused by attacks and the movement cost for a slowed unit is doubled. A unit that is slowed will feature a snail icon in its sidebar information when it is selected."
    [/slows]
#enddef

# this ended up being pretty useless, I'm going to get rid of it.
#ifdef __UNUSED__
# define ARCHAIC_WEAPON_TIE_EVENTS

    # attacker hits, the unit is caught
    [event]
        name=attacker_hits
        first_time_only=no
        [filter_attack]
            name=rope
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x2,$y2
            [/filter]
            variable=caught_temp
            kill=yes
        [/store_unit]
        [set_variable]
            name=caught_temp.variables.roper_id
            value=$unit.id
        [/set_variable]
        [set_variable]
            name=caught_temp.moves
            value=0
        [/set_variable]
        [unstore_unit]
            variable=caught_temp
        [/unstore_unit]
        {CLEAR_VARIABLE caught_temp}
    [/event]

    # make the caught unit lose its moves this turn if the attacker is adjacent at start
    # this seems artificial, but it eliminates the side number advantage (I think ...)
    [event]
        name=turn refresh
        first_time_only=no
        # first, store all units with rope attacker adjacent
        [store_unit]
            [filter]
                [filter_adjacent]
                    has_weapon=rope
                    is_enemy=yes
                [/filter_adjacent]
                side=$side_number
            [/filter]
            variable=caught_temp
            kill=no
        [/store_unit]
        #	{DEBUG_MSG "$caught_temp[0].id"}
        # then, store all rope attacker units adjacent
        {FOREACH caught_temp i}
            #	{DEBUG_MSG "$caught_temp[$i].id"}
            #	{DEBUG_MSG "$caught_temp[$i].variables.roper_id"}
            [store_unit]
                [filter]
                    has_weapon=rope
                    [and]
                        [filter_adjacent]
                            id=$caught_temp[$i].id
                            is_enemy=yes
                        [/filter_adjacent]
                    [/and]
                [/filter]
                variable=roper_temp
                kill=no
            [/store_unit]
            # this indicates the roper is not being stored
            #	{DEBUG_MSG "the roper is $roper_temp[$i].id"}
            # fixed
            #	[set_variable]
            #	     name=doloophack
            #	     value=$caught_temp[$i].variables.roper_id
            #	[/set_variable]
            #	{DEBUG_MSG "this is being passed into second loop: $doloophack|"}
            {FOREACH roper_temp j}
                # see if any of the stored ropers id match variables.roper_id
                [if]
                    [variable]
                        name=roper_temp[$j].id
                        #		equals=$doloophack
                        equals=$caught_temp[$i].variables.roper_id
                    [/variable]
                    [then]
                        [set_variable]
                            name=caught_temp[$i].moves
                            value=0
                        [/set_variable]
                        #	{DEBUG_MSG "This is the caught unit id: $caught_temp[$i].id"}
                    [/then]
                    [else]
                        #	{DEBUG_MSG "$doloophack| is not $roper_temp[$j].id|"}
                        #	{DEBUG_MSG "$caught_temp[$i].variable.roper_id| is not $roper_temp[$j].id|"}
                    [/else]
                [/if]
            {NEXT j}
            {CLEAR_VARIABLE roper_temp}
            [unstore_unit]
                variable=caught_temp[$i]
                find_vacant=no
            [/unstore_unit]
        {NEXT i}
        {CLEAR_VARIABLE caught_temp}
    [/event]
# enddef
#endif

#####################
# to make the shell hiding stuff
####################

#define ARCHAIC_SHELL_TRANSFORM_INTERNAL UNIT_TYPE

    # hide
    {TRANSFORM_UNIT (
        type={UNIT_TYPE}
        side=$side_number
        [filter_adjacent]
            count=3,4,5,6
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) ({UNIT_TYPE}_Hiding)}
    # unhide
    {TRANSFORM_UNIT (
        type={UNIT_TYPE}_Hiding
        side=$side_number
        [filter_adjacent]
            count=0,1
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) ({UNIT_TYPE})}

#enddef

#define ARCHAIC_SHELL_TRANSFORM
{ARCHAIC_SHELL_TRANSFORM_INTERNAL (Terrapin)}
{ARCHAIC_SHELL_TRANSFORM_INTERNAL (Snapper)}
{ARCHAIC_SHELL_TRANSFORM_INTERNAL (Tortoise)}
{ARCHAIC_SHELL_TRANSFORM_INTERNAL (Rock Snapper)}
{ARCHAIC_SHELL_TRANSFORM_INTERNAL (Rockback)}
{ARCHAIC_SHELL_TRANSFORM_INTERNAL (Adamantine)}
#enddef

#define ARCHAIC_SHELL_TRANSFORM_OLD
    # put this in an [event]

    # hide
    {TRANSFORM_UNIT (
        type=Terrapin
        side=$side_number
        [filter_adjacent]
            count=3,4,5,6
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) (Terrapin_Hiding)}
    # unhide
    {TRANSFORM_UNIT (
        type=Terrapin_Hiding
        side=$side_number
        [filter_adjacent]
            count=0,1
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) (Terrapin)}
    # hide
    {TRANSFORM_UNIT (
        type=Snapper
        side=$side_number
        [filter_adjacent]
            count=4,5,6
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) (Snapper_Hiding)}
    # unhide
    {TRANSFORM_UNIT (
        type=Snapper_Hiding
        side=$side_number
        [filter_adjacent]
            count=0-2
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) (Snapper)}
    # hide
    {TRANSFORM_UNIT (
        type=Rockback
        side=$side_number
        [filter_adjacent]
            count=4,5,6
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) (Rockback_Hiding)}
    # unhide
    {TRANSFORM_UNIT (
        type=Rockback_Hiding
        side=$side_number
        [filter_adjacent]
            count=0-2
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) (Rockback)}
    {TRANSFORM_UNIT (
        type=Adamantine
        side=$side_number
        [filter_adjacent]
            count=4,5,6
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) (Adamantine_Hiding)}
    # unhide
    {TRANSFORM_UNIT (
        type=Adamantine_Hiding
        side=$side_number
        [filter_adjacent]
            count=0-2
            adjacent=n,ne,se,s,sw,nw
            is_enemy=yes
        [/filter_adjacent]
    ) (Adamantine)}
#enddef


#define ARCHAIC_SHELL_MENU_INTERNAL UNIT_TYPE
        [set_menu_item]
            id=aa_shell_{UNIT_TYPE}
            image=misc/slowed.png
            description=_"hide in shell"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    type={UNIT_TYPE}
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) ({UNIT_TYPE}_Hiding)}
            [/command]
        [/set_menu_item]
        [set_menu_item]
            id=aa_shellb_{UNIT_TYPE}
            image=misc/status-self.png
            description=_"stop hiding"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                    type={UNIT_TYPE}_Hiding
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) ({UNIT_TYPE})}
            [/command]
        [/set_menu_item]
#enddef



#define ARCHAIC_SHELL_EVENTS
    # Eventually, it would be good to make this a right-click menu and FAI function so it is handled more intelligently,
    # but this will do for now...

    [event]
        name=ai turn
        first_time_only=no

        {ARCHAIC_SHELL_TRANSFORM}
    [/event]

    [event]
        # this needs to be in something like a 'side turn' so that the turtles don't need to be there
        # in the scenario beginning
        name=start,side turn
        first_time_only=no
	{ARCHAIC_SHELL_MENU_INTERNAL Terrapin}
	{ARCHAIC_SHELL_MENU_INTERNAL Snapper}
	{ARCHAIC_SHELL_MENU_INTERNAL Tortoise}
	{ARCHAIC_SHELL_MENU_INTERNAL (Rock Snapper)}
	{ARCHAIC_SHELL_MENU_INTERNAL Rockback}
	{ARCHAIC_SHELL_MENU_INTERNAL Adamantine}
    [/event]

#enddef

#define ARCHAIC_SHELL_EVENTS_OLD
    # Eventually, it would be good to make this a right-click menu and FAI function so it is handled more intelligently,
    # but this will do for now...

    [event]
        name=ai turn
        first_time_only=no

        {ARCHAIC_SHELL_TRANSFORM}
    [/event]

    [event]
        # this needs to be in something like a 'side turn' so that the turtles don't need to be there
        # in the scenario beginning
        name=start,side turn
        first_time_only=no
        [set_menu_item]
            id=aa_shell1
            image=misc/slowed.png
            description=_"hide in shell"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    type=Terrapin
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) (Terrapin_Hiding)}
            [/command]
        [/set_menu_item]
        [set_menu_item]
            id=aa_shell1b
            image=misc/status-self.png
            description=_"stop hiding"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                    type=Terrapin_Hiding
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) (Terrapin)}
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=aa_shell2
            image=misc/slowed.png
            description=_ "hide in shell"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                    type=Snapper
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) (Snapper_Hiding)}
            [/command]
        [/set_menu_item]
        [set_menu_item]
            id=aa_shell2b
            image=misc/status-self.png
            description=_ "stop hiding"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                    type=Snapper_Hiding
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) (Snapper)}
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=aa_shell3
            image=misc/slowed.png
            description=_ "hide in shell"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                    type=Rockback
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) (Rockback_Hiding)}
            [/command]
        [/set_menu_item]
        [set_menu_item]
            id=aa_shell3b
            image=misc/status-self.png
            description=_ "stop hiding"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                    type=Rockback_Hiding
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) (Rockback)}
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=aa_shell4
            image=misc/slowed.png
            description=_ "hide in shell"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                    type=Adamantine
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) (Adamantine_Hiding)}
            [/command]
        [/set_menu_item]
        [set_menu_item]
            id=aa_shell4b
            image=misc/status-self.png
            description=_ "stop hiding"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    [not]
                        [filter_wml]
                            moves="0"
                        [/filter_wml]
                    [/not]
                    type=Adamantine_Hiding
                [/have_unit]
            [/show_if]
            [command]
                {TRANSFORM_UNIT (x,y=$x1,$y1) (Adamantine)}
            [/command]
        [/set_menu_item]
    [/event]

#enddef

#define ARCHAIC_ABILITY_HEALSELF AMT
    # Canned definition of Immortal ability to be included in an
    # [abilities] clause.  Crappier version of mainline ABILITY_REGENERATES
    [regenerate]
        value={AMT}
        id=aa_selfheal
        name= _ "self-heal ("+{AMT}+")"
        description= _ "This unit heals {AMT} HP per turn.  If poisoned, it will remove the poison."
        affect_self=yes
        poison=cured
    [/regenerate]
#enddef

#define ARCHAIC_ABILITY_SELFHEAL
    {ARCHAIC_ABILITY_HEALSELF 4}
#enddef

#define ARCHAIC_ABILITY_PENUMBRA
    [illuminates]
        id=aa_penumbra
        value=-25
        max_value=-25
        cumulative=no
        name= _ "penumbra"
        female_name= _ "female^penumbra"
        description= _ "This unit obscures the surrounding area, making chaotic units fight better, and lawful units fight worse.

Any units adjacent to this unit will fight as if it were dusk when it is day, and as if it were night when it is dusk."
        affect_self=yes
    [/illuminates]
#enddef

#define ARCHAIC_ABILITY_DESERTSTALK
    # Canned definition of the Desert-Stalk ability to be included in an
    # [abilities] clause.
    [hides]
        id=aa_desertstalk
        name= _ "desert-stalk"
        female_name= _ "female^desert-stalk"
        name_inactive= _ "desert-stalk"
        female_name_inactive= _ "female^desert-stalk"
        description= _ "This unit can hide in sand terrain, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on desert terrain, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        description_inactive= _ "Desert-Stalk:
This unit can hide in sand terrain, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on desert terrain, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=Ds*,Dd*,Hd*,Md*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define ARCHAIC_WEAPON_SPECIAL_SCATTER
    [chance_to_hit]
        id=aa_scatter
        name= _ "scattershot"
        description= _ "This attack always has at least a 70% chance to hit."
        value=70
        cumulative=yes
        #        active_on=offense
    [/chance_to_hit]
#enddef
