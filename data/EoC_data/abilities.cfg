#textdomain wesnoth-Ageless_Era

#define ABILITY_PROTECTION_BASE FILTER
    [resistance]
        id=protection
        add=20
        max_value=50
        apply_to=blade,pierce,impact,fire,cold,arcane
        name= _ "protection"
        description= _ "Adjacent units of lower level from this side receive a +20% bonus to all resistances (up to a maximum of 50%)."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                {FILTER}
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef

#define ABILITY_PROTECTION_LEVEL_1
    {ABILITY_PROTECTION_BASE (level=0)}
#enddef

#define ABILITY_PROTECTION_LEVEL_2
    {ABILITY_PROTECTION_BASE (level=0
    [or]
        level=1
    [/or])}
#enddef

#define ABILITY_PROTECTION_LEVEL_3
    {ABILITY_PROTECTION_BASE (level=0
    [or]
        level=1
    [/or]
    [or]
        level=2
    [/or])}
#enddef

#define ABILITY_PROTECTION_LEVEL_4
    {ABILITY_PROTECTION_BASE (level=0
    [or]
        level=1
    [/or]
    [or]
        level=2
    [/or]
    [or]
        level=3
    [/or])}
#enddef

#define ABILITY_PROTECTION_LEVEL_5
    {ABILITY_PROTECTION_BASE (level=0
    [or]
        level=1
    [/or]
    [or]
        level=2
    [/or]
    [or]
        level=3
    [/or]
    [or]
        level=4
    [/or])}
#enddef

#define ABILITY_TERROR_LEVEL_1
    [leadership]
        id=terror
        value=-30
        cumulative=no
        name= _ "terror"
        description= _ "This unit can frighten enemy units that are next to it, making them fight worse.

Adjacent enemy units of lower level will do less damage in battle. When an enemy unit of the same or lower level is adjacent and engages in combat, its attacks do 15% less damage times the difference in their levels + 15%."
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_TERROR_LEVEL_2
    [leadership]
        id=terror
        value=-45
        cumulative=no
        name= _ "terror"
        description= _ "This unit can frighten enemy units that are next to it, making them fight worse.

Adjacent enemy units of lower level will do less damage in battle. When an enemy unit of the same or lower level is adjacent and engages in combat, its attacks do 15% less damage times the difference in their levels + 15%."
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-30
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_TERROR_LEVEL_3
    [leadership]
        id=terror
        value=-60
        cumulative=no
        name= _ "terror"
        description= _ "This unit can frighten enemy units that are next to it, making them fight worse.

Adjacent enemy units of lower level will do less damage in battle. When an enemy unit of the same or lower level is adjacent and engages in combat, its attacks do 15% less damage times the difference in their levels + 15%."
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-45
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-30
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_SYLVAN_SPARK
    [regenerate]
        value=5
        id=sylvan_spark
        name= _ "sylvan spark"
        description= _ "While in vegetated terrains, the unit will heal itself 5 hp per turn. If it is poisoned, it will remove the poison instead of healing. Vegetated terrains are forest, great tree, farmland and mushroom grove hexes."
        name_inactive= _ "sylvan spark"
        description_inactive= _ "While in vegetated terrains, the unit will heal itself 5 hp per turn. If it is poisoned, it will remove the poison instead of healing. Vegetated terrains are forest, great tree, farmland and mushroom grove hexes."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=*^F*, *^Uf, *^Ufi, *^Gvs
            [/filter_location]
        [/filter_self]
        poison=cured
    [/regenerate]
#enddef

# wmllint: unbalanced-on
#define ABILITY_PHYSICAL_ENDURANCE
    [dummy]
        id=physical_endurance
        name= _ "physical endurance"
        description= _ "Units with this ability instantly regenerate half of the damage dealt to them unless its type is arcane, or the damage amount would kill them otherwise (greater than or equals their remaining HP)."
    [/dummy]
    # wmlxgettext: [abilities]
[/abilities]

[event]
    id=ability_physical_endurance_attacker_hits
    name=attacker hits
    first_time_only=no
    [filter_second]
        ability=physical_endurance
    [/filter_second]
    [filter_attack]
        [not]
            type=arcane
        [/not]
    [/filter_attack]

    [fire_event]
        name=physical endurance handler
        [primary_unit]
            x,y=$x2,$y2
        [/primary_unit]
        [secondary_unit]
            x,y=$x1,$y1
        [/secondary_unit]
    [/fire_event]
[/event]
[event]
    id=ability_physical_endurance_defender_hits
    name=defender hits
    first_time_only=no
    [filter]
        ability=physical_endurance
    [/filter]
    [filter_second_attack]
        [not]
            type=arcane
        [/not]
    [/filter_second_attack]

    [fire_event]
        name=physical endurance handler
        [primary_unit]
            x,y=$x1,$y1
        [/primary_unit]
        [secondary_unit]
            x,y=$x2,$y2
        [/secondary_unit]
    [/fire_event]
[/event]
[event]
    id=ability_physical_endurance_handler
    name=physical endurance handler
    first_time_only=no

    # Primary unit: physical endurance user
    # Secondary unit: attacker/defender

    [if]
        {VARIABLE_CONDITIONAL unit.hitpoints greater_than 0}
        [then]
            {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp to_variable damage_inflicted}
            {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp divide      2}
            {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp round       ceil}

            [heal_unit]
                [filter]
                    x,y=$x1,$y1
                [/filter]
                amount=$temp_PHYSICAL_ENDURANCE_restore_hp
            [/heal_unit]

            [floating_text]
                x,y=$x1,$y1
                text="<span color='green'>$heal_amount</span>" # wmllint: ignore
            [/floating_text]

            {CLEAR_VARIABLE temp_PHYSICAL_ENDURANCE_restore_hp}
        [/then]
    [/if]
[/event]

[+abilities]
    # wmlxgettext: [/abilities]
#enddef
# wmllint: unbalanced-off

# NOTE: This is to always be the first variation
# HACK; a filthy, disgusting hack, but... it's easy, it saves us from having to do ickier hacks, and. most importantly, we're lazy
# TODO: maybe add female image support
#define VAMPIRE_INFO_VARIATION BASIC_TYPE IMAGE
    [variation]
        variation_name=info
        usage={BASIC_TYPE}
        image={IMAGE}
        hide_help=true
    [/variation]
#enddef

# Yeah, no Ã¼berprocedures for you!
# Don't like it? Too bad!
# NOTE: this is to be the second variation, if used
#define VAMPIRE_INFO_FEM_VARIATION IMAGE
    [variation]
        variation_name=info_female
        image="{IMAGE}"
        hide_help=true
    [/variation]
#enddef

#define VAMPIRE_OVERLAY IMAGE SIDE_NUMBER
misc/blank-72x72.png~BLIT("{IMAGE}~TC({SIDE_NUMBER},magenta)~SCALE(38,38)~FL()",34,0)#enddef

#define VAMPIRE_TRANSFORMATION_EVENT
    [event]
        name=start
        [set_menu_item]
            id=vampire_transformation
            description= _ "Transform This Unit"
            [show_if]
                [have_unit]
                    ability=transformation
                    x,y=$x1,$y1
                    side=$side_number
                [/have_unit]
            [/show_if]
            [command]
                [store_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    variable=to_transform
                    kill=no
                [/store_unit]
                [fire_event]
                    name=vampire_transform
                [/fire_event]
            [/command]
        [/set_menu_item]
    [/event]
    [event]
        name=vampire_transform
        first_time_only=no
        [if]
            [not]
                [variable]
                    name=to_transform.type
                    contains="Bat"
                [/variable]
            [/not]

            [then]
                {VAMPIRE_TRANSFORMATION $to_transform.id ("$to_transform.type Bat")}

                [unit_overlay]
                    id=$to_transform.id
                    image={VAMPIRE_OVERLAY $to_transform.image $to_transform.side}
                [/unit_overlay]

                [modify_unit]
                    [filter]
                        id=$to_transform.id
                    [/filter]

                    [variables]
                        #transformation_previous_type=$to_transform.type
                        transformation_overlay={VAMPIRE_OVERLAY $to_transform.image $to_transform.side}
                        transformed=yes
                    [/variables]
                [/modify_unit]

                [clear_variable]
                    name=to_transform
                [/clear_variable]
            [/then]
            [else]
                # We don't need the magickal hack number of doom here

                [remove_unit_overlay]
                    id=$to_transform.id
                    image="$to_transform.variables.transformation_overlay"
                [/remove_unit_overlay]

                {VAMPIRE_TRANSFORMATION $to_transform.id $to_transform.variation[0].usage}
                [modify_unit]
                    [filter]
                        id=$to_transform.id
                    [/filter]

                    [variables]
                        transformed=no
                    [/variables]
                [/modify_unit]

                # Make sure that moves<=max_moves

                [store_unit]
                    [filter]
                        id=$to_transform.id
                    [/filter]
                    variable=tmp_vampire_movement
                    kill=no
                [/store_unit]

                [if]
                    [variable]
                        name=tmp_vampire_movement.moves
                        greater_than=$tmp_vampire_movement.max_moves
                    [/variable]

                    [then]
                        [modify_unit]
                            [filter]
                                id=$tmp_vampire_movement.id
                            [/filter]

                            moves=$tmp_vampire_movement.max_moves
                        [/modify_unit]
                    [/then]
                [/if]

                [clear_variable]
                    name=tmp_vampire_movement
                [/clear_variable]

                [clear_variable]
                    name=to_transform
                [/clear_variable]
            [/else]
        [/if]
    [/event]
    [event]
        name=post advance
        first_time_only=no
        [filter]
            [filter_wml]
                [variables]
                    transformed=yes
                [/variables]
            [/filter_wml]
        [/filter]
        [store_unit]
            [filter]
                id=$unit.id
            [/filter]
            variable=advanced_vampire
            kill=no
        [/store_unit]

        [remove_unit_overlay]
            id=$advanced_vampire.id
            image="$advanced_vampire.variables.transformation_overlay"
        [/remove_unit_overlay]

        # HACK: yeah, a hack. Are you really surprised?
        [if]
            [variable]
                name=advanced_vampire.gender
                equals=female
            [/variable]

            [then]
                [set_variable]
                    name=transformation_magick_hack_number_of_doom
                    value=1
                [/set_variable]
            [/then]

            [else]
                [set_variable]
                    name=transformation_magick_hack_number_of_doom
                    value=0
                [/set_variable]
            [/else]
        [/if]

        [unit_overlay]
            id=$advanced_vampire.id
            image={VAMPIRE_OVERLAY $advanced_vampire.variation[$transformation_magick_hack_number_of_doom].image $advanced_vampire.side}
        [/unit_overlay]

        [modify_unit]
            [filter]
                id=$advanced_vampire.id
            [/filter]

            [variables]
                #transformation_previous_type=$advanced_vampire.variation[0].image
                transformation_overlay={VAMPIRE_OVERLAY $advanced_vampire.variation[$transformation_magick_hack_number_of_doom].image $advanced_vampire.side}
            [/variables]
        [/modify_unit]

        [clear_variable]
            name=advanced_vampire
        [/clear_variable]

        [clear_variable]
            name=transformation_magick_hack_number_of_doom
        [/clear_variable]
    [/event]
#enddef

# wmllint: unbalanced-on
#define ABILITY_VAMPIRE_TRANSFORMATION
    [dummy]
        id=transformation
        name= _ "transformation"
        description= _ "This unit can transform into a bat. This bat will have the unit's current HP and XP."
    [/dummy]
#enddef
# wmllint: unbalanced-off

#define __ABILITY_RESURGENCE_BASE TERRAIN_TYPES EXCLUDED_TERRAIN_TYPES
    [regenerate]
        [filter_self]
            [filter_location]
                terrain={TERRAIN_TYPES}
                [not]
                    terrain={EXCLUDED_TERRAIN_TYPES},{COMMON_EXCLUDED_TERRAIN_TYPES}
                [/not]
            [/filter_location]
        [/filter_self]

        value=5
        id=regenerates
        name= _ "resurgence"
        female_name= _ "female^resurgence"
        description= _ "This unit will absorb energy whenever it is on terrain that matches its elemental affinity, thus healing itself by 5 HP per turn. If it is poisoned, it will slow, but not cure the poison."
        affect_self=yes
        poison=slowed
    [/regenerate]
#enddef

#define COMMON_EXCLUDED_TERRAIN_TYPES
*^Bw*,*^Bsb*#enddef

#define FIERY_TERRAIN
Q*,Mv*#enddef

#define WATERY_TERRAIN
W*,S*,Chw*,Khw*#enddef

#define EARTHEN_TERRAIN
Mm*,Md*,Hh*,Hhd*,Uh*#enddef

#define VEGETATED_TERRAIN
*^F*,*^Uf*,*^Gvs#enddef

#define COLD_TERRAIN
A*,Ha*,Ms*#enddef

#define ABILITY_FIERY_RESURGENCE
    {__ABILITY_RESURGENCE_BASE {FIERY_TERRAIN} ()}
#enddef

#define ABILITY_WATERY_RESURGENCE
    {__ABILITY_RESURGENCE_BASE ({WATERY_TERRAIN}, {COLD_TERRAIN}) ()}
#enddef

#define ABILITY_EARTHEN_RESURGENCE
    {__ABILITY_RESURGENCE_BASE {EARTHEN_TERRAIN} ()}
#enddef

#define ABILITY_SYLVAN_RESURGENCE
    {__ABILITY_RESURGENCE_BASE {VEGETATED_TERRAIN} "*^Fetd,*^Fdw"}
#enddef

# Stuff from Eftboren:

#define ABILITY_CAMOUFLAGE
    [hides]
        id=camouflage
        name= "camouflage"
        description= _ "This unit can hide in deserts and dunes, and remain undetected by its enemies.

Enemy units cannot see this unit while it is in desert or dunes, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=D*^*,Hd
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define ABILITY_SUSTENANCE
    [resistance]
        id=sustenance
        add=20
        max_value=30
        apply_to=blade,pierce,impact,fire,cold,arcane
        [filter_base_value]
            greater_than=-1
        [/filter_base_value]
        [filter_self]
            [filter_location]
                time_of_day=lawful
            [/filter_location]
        [/filter_self]
        name= "sustenance"
        description= _ "This unitâs resistances are increased by 20% in daylight, on defense and attack. Vulnerabilities are not affected."
        affect_self=yes
    [/resistance]
#enddef
