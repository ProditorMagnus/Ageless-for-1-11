#textdomain wesnoth-Ageless_Era

#define AE_REMOVE_OBJECT FILTER NAME
    # added support for FILTER multiple units
    # Base code of this is taken from wiki but as that one didnt work it is changed here
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=gifted
        kill=no
    [/store_unit]
    {FOREACH gifted k}
        {FOREACH gifted[$k].modifications.object j}
            [if]
                [variable]
                    name=gifted[$k].modifications.object[$j].name
                    equals={NAME}
                [/variable]
                [then]
                    {CLEAR_VARIABLE gifted[$k].modifications.object[$j]}
                    {VARIABLE object_removed 1}
                    {VARIABLE_OP j sub 1}
                [/then]
            [/if]
        {NEXT j}
        # Do not flash(advance) when there is no need
        [if]
            [variable]
                name=object_removed
                greater_than_equal_to=1
            [/variable]
            [then]
                [unstore_unit]
                    variable=gifted[$k]
                    find_vacant=no
                [/unstore_unit]
                {ADVANCE_UNIT id=$gifted[$k].id $gifted[$k].type}
                [store_unit]
                    [filter]
                        id=$gifted[$k].id
                    [/filter]
                    variable=gifted2
                    kill=no
                [/store_unit]
                {VARIABLE gifted2.max_hitpoints $gifted[$k].max_hitpoints}
                {VARIABLE gifted2.hitpoints $gifted[$k].hitpoints}
                {VARIABLE gifted2.experience $gifted[$k].experience}
                {VARIABLE gifted2.max_experience $gifted[$k].max_experience}
                {VARIABLE gifted2.level $gifted[$k].level}
                # it needs to be stored to correct place too
                {VARIABLE gifted2.x $gifted[$k].x}
                {VARIABLE gifted2.y $gifted[$k].y}
                # core status
                {VARIABLE gifted2.status.poisoned $gifted[$k].status.poisoned}
                {VARIABLE gifted2.status.slowed $gifted[$k].status.slowed}
                {VARIABLE gifted2.status.unhealable $gifted[$k].status.unhealable}
                {VARIABLE gifted2.status.petrified $gifted[$k].status.petrified}
                {VARIABLE gifted2.moves $gifted[$k].moves}
                {VARIABLE gifted2.attacks_left $gifted[$k].attacks_left}
                # allows new rune effect
                {VARIABLE gifted2.status.AE_imp_status_runed no}
                [unstore_unit]
                    variable=gifted2
                    find_vacant=no
                [/unstore_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE object_removed}
        {CLEAR_VARIABLE gifted[$k]}
        {VARIABLE_OP k sub 1}
        {CLEAR_VARIABLE gifted2}
    {NEXT k}
#enddef

#define INSERT_EFFECT CODE_NAME
    [insert_tag]
        name=effect
        variable={CODE_NAME}
    [/insert_tag]
#enddef
