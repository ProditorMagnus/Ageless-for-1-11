#define AE_MAG_WEAPON_SPECIAL_TRIPLESTRIKE
    [dummy]
        id=AE_mag_id_triplestrike
        name= _ "triple strike"
        description= _ "This attack can hit some enemy units adjacent to a target (up to 3 harmed units total - depending on your luck)."
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

    [event]
        name=attacker hits,attacker misses
        first_time_only=no
		id=AE_mag_id_triplestrike_event
        [filter_attack]
            special=AE_mag_id_triplestrike
        [/filter_attack]

        [store_unit]
            [filter]
                [filter_adjacent]
					x,y=$x2,$y2
				[/filter_adjacent]
				[filter_adjacent]
					x,y=$x1,$y1
					is_enemy=yes
				[/filter_adjacent]
				[not]
					[filter_wml]
						[status]
							petrified=yes
						[/status]
					[/filter_wml]
				[/not]
            [/filter]
            variable=bystander
        [/store_unit]
		
		{VARIABLE areadmg $weapon.damage}
		
        [if]
		{VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
            [then] 
				{VARIABLE_OP areadmg divide 2}
				{VARIABLE_OP areadmg round floor}
            [/then]
        [/if]

        {FOREACH bystander i}
            {RANDOM 1..100}
            [if]
			{VARIABLE_CONDITIONAL random less_than_equal_to 40}
                [then]
					[harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                        [/filter]
						[filter_second]
							x,y=$x1,$y1
						[/filter_second]
                        amount=$areadmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
						delay=0
						experience=no
						variable=triplevar
                    [/harm_unit]
					[if]
					[have_unit]
						find_in=expfreeze
						x,y=$bystander[$i].x,$bystander[$i].y
					[/have_unit]
					[else]
						[store_unit]
							[filter]
								x,y=$bystander[$i].x,$bystander[$i].y
							[/filter]
							variable=expfreeze
							mode=append
						[/store_unit]
					[/else]
					[/if]
					#drain
					[if]
					{VARIABLE_CONDITIONAL bystander[$i].race equals undead}
					[or]
						{VARIABLE_CONDITIONAL bystander[$i].race equals (AE_mag_i_8_magical)}
					[/or]
					[or]
						{VARIABLE_CONDITIONAL bystander[$i].race equals mechanical}
					[/or]
					[else]
						{VARIABLE_OP triplevar.harm_amount divide 2}
						{VARIABLE_OP triplevar.harm_amount round floor}
						[heal_unit]
							[filter]
								x,y=$x1,$y1
							[/filter]
							amount=$triplevar.harm_amount
							animate=no
						[/heal_unit]
						[floating_text]
						   x,y=$x1,$y1
						   text="<span color='#00ff00'>" +$triplevar.harm_amount|+ "</span>"
						[/floating_text]
					[/else]
					[/if]
					{CLEAR_VARIABLE triplevar}
                [/then]
            [/if]
        {NEXT i}
    [/event]
	
	[event]
        name=defender hits,defender misses
        first_time_only=no
		id=AE_mag_id_triplestrike_event2
        [filter_second_attack]
            special=AE_mag_id_triplestrike
        [/filter_second_attack]

        [store_unit]
            [filter]
                [filter_adjacent]
					x,y=$x2,$y2
					is_enemy=yes
				[/filter_adjacent]
				[filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
				[not]
					[filter_wml]
						[status]
							petrified=yes
						[/status]
					[/filter_wml]
				[/not]
            [/filter]
            variable=bystander
        [/store_unit]
		
		{VARIABLE areadmg $second_weapon.damage}
		
        [if]
		{VARIABLE_CONDITIONAL second_unit.status.slowed boolean_equals yes}
            [then] 
				{VARIABLE_OP areadmg divide 2}
				{VARIABLE_OP areadmg round floor}
            [/then]
        [/if]

        {FOREACH bystander i}
            {RANDOM 1..100}
            [if]
			{VARIABLE_CONDITIONAL random less_than_equal_to 40}
                [then]
					[harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                        [/filter]
						[filter_second]
							x,y=$x2,$y2
						[/filter_second]
                        amount=$areadmg
                        damage_type=$second_weapon.type
                        alignment=$second_unit.alignment
                        fire_event=yes
                        animate=defender
						delay=0
						experience=no
						variable=triplevar
                    [/harm_unit]
					[if]
					[have_unit]
						find_in=expfreeze
						x,y=$bystander[$i].x,$bystander[$i].y
					[/have_unit]
					[else]
						[store_unit]
							[filter]
								x,y=$bystander[$i].x,$bystander[$i].y
							[/filter]
							variable=expfreeze
							mode=append
						[/store_unit]
					[/else]
					[/if]
					#drain
					[if]
					{VARIABLE_CONDITIONAL bystander[$i].race equals undead}
					[or]
						{VARIABLE_CONDITIONAL bystander[$i].race equals (AE_mag_i_8_magical)}
					[/or]
					[or]
						{VARIABLE_CONDITIONAL bystander[$i].race equals mechanical}
					[/or]
					[else]
					{VARIABLE_OP triplevar.harm_amount divide 2}
					{VARIABLE_OP triplevar.harm_amount round floor}
					[heal_unit]
						[filter]
							x,y=$x2,$y2
						[/filter]
						amount=$triplevar.harm_amount
						animate=no
					[/heal_unit]
					[floating_text]
					   x,y=$x2,$y2
					   text="<span color='#00ff00'>" +$triplevar.harm_amount|+ "</span>"
					[/floating_text]
					[/else]
					[/if]
					{CLEAR_VARIABLE triplevar}
                [/then]
            [/if]
        {NEXT i}
    [/event]
	
	{EXPFREEZE_EVENT}
	
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef