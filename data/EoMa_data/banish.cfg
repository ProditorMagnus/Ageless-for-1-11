#define BANISH_ANIM X Y
		[animate_unit]
			flag=banished
			[filter]
				x,y={X},{Y}
			[/filter]
		[/animate_unit]
#enddef

#define AE_MAG_WEAPON_SPECIAL_BANISH
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=AE_mag_id_banish
        name= _ "banish"
        name_inactive= _ "banish"
        description=_"If this attack hits an enemy magical unit, the enemy will turn into a ‘Dimensional Gate’, (this happens only if the target is of lower level in comparison to the owner of this weapon special). If the enemy is of the same level, then it won't be affected."
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

#attacker----------------------------------------------------------
    [event]
        first_time_only=no
		id=AE_mag_id_banish_attacker1_event
        name=attacker hits
		
        [filter_attack]
            special=AE_mag_id_banish
        [/filter_attack]
        [filter]
			level=2
			[or]
				level=3
			[/or]
        [/filter]
		[filter_second]
            race=AE_mag_i_8_magical
			[and]
				level=0
				[or]
					level=1
				[/or]
			[/and]
        [/filter_second]

			{BANISH_ANIM $x2 $y2}
			[object]
				silent=yes
				take_only_once=no
				[effect]
					apply_to=type
					name=AE_mag_Dimensional_Gate
				[/effect]
				[filter]
					x,y=$x2,$y2
				[/filter]
			[/object]
			[store_unit]
				[filter]
					x,y=$x2,$y2
				[/filter]
				variable=dg
				kill=yes
			[/store_unit]
			{VARIABLE dg.attacks_left 0}
			{VARIABLE dg.moves 0}
			{VARIABLE dg.experience 0}
			{VARIABLE dg.side $unit.side}
			[unstore_unit]
				variable=dg
				find_vacant=no
			[/unstore_unit]
			[store_unit]
				[filter]
					id=$unit.id
				[/filter]
				variable=able_to_banish
			[/store_unit]
			{VARIABLE_OP able_to_banish.experience add 3}
			[unstore_unit]
				variable=able_to_banish
				find_vacant=no
				text=_ "+3 exp"
				red,green,blue=50,50,200
			[/unstore_unit]
			{CLEAR_VARIABLE able_to_banish}
			[fire_event]
				name=post banish
				[primary_unit]
					x,y=$x1,$y1
				[/primary_unit]
				[secondary_unit]
					x,y=$x2,$y2
				[/secondary_unit]
			[/fire_event]		
	[/event]
	
	[event]
        first_time_only=no
		id=AE_mag_id_banish_attacker2_event
        name=attacker hits
		
        [filter_attack]
            special=AE_mag_id_banish
        [/filter_attack]
        [filter]
			level=3
        [/filter]
		[filter_second]
            race=AE_mag_i_8_magical
			level=2
        [/filter_second]

			{BANISH_ANIM $x2 $y2}
			[object]
				silent=yes
				take_only_once=no
				[effect]
					apply_to=type
					name=AE_mag_Dimensional_Gate_II
				[/effect]
				[filter]
					x,y=$x2,$y2
				[/filter]
			[/object]
			[store_unit]
				[filter]
					x,y=$x2,$y2
				[/filter]
				variable=dg
				kill=yes
			[/store_unit]
			{VARIABLE dg.attacks_left 0}
			{VARIABLE dg.moves 0}
			{VARIABLE dg.experience 0}
			{VARIABLE dg.side $unit.side}
			[unstore_unit]
				variable=dg
				find_vacant=no
			[/unstore_unit]
			[store_unit]
				[filter]
					id=$unit.id
				[/filter]
				variable=able_to_banish
			[/store_unit]
			{VARIABLE_OP able_to_banish.experience add 3}
			[unstore_unit]
				variable=able_to_banish
				find_vacant=no
				text=_ "+3 exp"
				red,green,blue=50,50,200
			[/unstore_unit]
			{CLEAR_VARIABLE able_to_banish}
			[fire_event]
				name=post banish
				[primary_unit]
					x,y=$x1,$y1
				[/primary_unit]
				[secondary_unit]
					x,y=$x2,$y2
				[/secondary_unit]
			[/fire_event]
	[/event]
#defender----------------------------------------------------------
    [event]
        first_time_only=no
		id=AE_mag_id_banish_defender1_event
        name=defender hits
		
        [filter_second_attack]
            special=AE_mag_id_banish
        [/filter_second_attack]
        [filter_second]
			level=2
			[or]
				level=3
			[/or]
        [/filter_second]
		[filter]
            race=AE_mag_i_8_magical
			[and]
				level=0
				[or]
					level=1
				[/or]
			[/and]
        [/filter]

			{BANISH_ANIM $x1 $y1}
			[object]
				silent=yes
				take_only_once=no
				[effect]
					apply_to=type
					name=AE_mag_Dimensional_Gate
				[/effect]
				[filter]
					x,y=$x1,$y1
				[/filter]
			[/object]
			[store_unit]
				[filter]
					x,y=$x1,$y1
				[/filter]
				variable=dg
				kill=yes
			[/store_unit]
			{VARIABLE dg.attacks_left 0}
			{VARIABLE dg.moves 0}
			{VARIABLE dg.experience 0}
			{VARIABLE dg.side $unit.side}
			[unstore_unit]
				variable=dg
				find_vacant=no
			[/unstore_unit]
			[store_unit]
				[filter]
					id=$second_unit.id
				[/filter]
				variable=able_to_banish
			[/store_unit]
			{VARIABLE_OP able_to_banish.experience add 3}
			[unstore_unit]
				variable=able_to_banish
				find_vacant=no
				text=_ "+3 exp"
				red,green,blue=50,50,200
			[/unstore_unit]
			{CLEAR_VARIABLE able_to_banish}
			[fire_event]
				name=post banish
				[primary_unit]
					x,y=$x2,$y2
				[/primary_unit]
				[secondary_unit]
					x,y=$x1,$y1
				[/secondary_unit]
			[/fire_event]		
	[/event]
	
	[event]
        first_time_only=no
		id=AE_mag_id_banish_defender2_event
        name=defender hits
		
        [filter_second_attack]
            special=AE_mag_id_banish
        [/filter_second_attack]
        [filter_second]
			level=3
        [/filter_second]
		[filter]
            race=AE_mag_i_8_magical
			level=2
        [/filter]

			{BANISH_ANIM $x1 $y1}
			[object]
				silent=yes
				take_only_once=no
				[effect]
					apply_to=type
					name=AE_mag_Dimensional_Gate_II
				[/effect]
				[filter]
					x,y=$x1,$y1
				[/filter]
			[/object]
			[store_unit]
				[filter]
					x,y=$x1,$y1
				[/filter]
				variable=dg
				kill=yes
			[/store_unit]
			{VARIABLE dg.attacks_left 0}
			{VARIABLE dg.moves 0}
			{VARIABLE dg.experience 0}
			{VARIABLE dg.side $unit.side}
			[unstore_unit]
				variable=dg
				find_vacant=no
			[/unstore_unit]
			[store_unit]
				[filter]
					id=$second_unit.id
				[/filter]
				variable=able_to_banish
			[/store_unit]
			{VARIABLE_OP able_to_banish.experience add 3}
			[unstore_unit]
				variable=able_to_banish
				find_vacant=no
				text=_ "+3 exp"
				red,green,blue=50,50,200
			[/unstore_unit]
			{CLEAR_VARIABLE able_to_banish}
			[fire_event]
				name=post banish
				[primary_unit]
					x,y=$x2,$y2
				[/primary_unit]
				[secondary_unit]
					x,y=$x1,$y1
				[/secondary_unit]
			[/fire_event]
	[/event]
	
#death------------------------------------------------
    [event]
        first_time_only=no
		id=AE_mag_id_banish_die1_event
        name=last breath
        
		[filter_second_attack]
            special=AE_mag_id_banish
        [/filter_second_attack]
        [filter_second]
			level=2
			[or]
				level=3
			[/or]
        [/filter_second]
		[filter]
            race=AE_mag_i_8_magical
			[and]
				level=0
				[or]
					level=1
				[/or]
			[/and]
        [/filter]
			
			{BANISH_ANIM $x1 $y1}
			{UNIT $unit.side AE_mag_Dimensional_Gate $x1 $y1 (placement=map_overwrite)}
			[store_unit]
				[filter]
					x,y=$x1,$y1
				[/filter]
				variable=dg
				kill=yes
			[/store_unit]
			{VARIABLE dg.attacks_left 0}
			{VARIABLE dg.moves 0}
			{VARIABLE dg.experience 0}
			{VARIABLE dg.side $second_unit.side}
			[unstore_unit]
				variable=dg
				find_vacant=no
			[/unstore_unit]
			[store_unit]
				[filter]
					id=$second_unit.id
				[/filter]
				variable=able_to_banish
			[/store_unit]
			{VARIABLE_OP able_to_banish.experience add 3}
			[unstore_unit]
				variable=able_to_banish
				find_vacant=no
				text=_ "+3 exp"
				red,green,blue=50,50,200
			[/unstore_unit]
			{CLEAR_VARIABLE able_to_banish}
			[fire_event]
				name=post banish
				[primary_unit]
					x,y=$x2,$y2
				[/primary_unit]
				[secondary_unit]
					x,y=$x1,$y1
				[/secondary_unit]
			[/fire_event]
	[/event]
	
	[event]
        first_time_only=no
		id=AE_mag_id_banish_die2_event
        name=last breath
		
		[filter_second_attack]
            special=AE_mag_id_banish
        [/filter_second_attack]
        [filter_second]
			level=3
        [/filter_second]
		[filter]
            race=AE_mag_i_8_magical
			level=2
        [/filter]
			
			{BANISH_ANIM $x1 $y1}
			{UNIT $unit.side AE_mag_Dimensional_Gate_II $x1 $y1 (placement=map_overwrite)}
			[store_unit]
				[filter]
					x,y=$x1,$y1
				[/filter]
				variable=dg
				kill=yes
			[/store_unit]
			{VARIABLE dg.attacks_left 0}
			{VARIABLE dg.moves 0}
			{VARIABLE dg.experience 0}
			{VARIABLE dg.side $second_unit.side}
			[unstore_unit]
				variable=dg
				find_vacant=no
			[/unstore_unit]
			[store_unit]
				[filter]
					id=$second_unit.id
				[/filter]
				variable=able_to_banish
			[/store_unit]
			{VARIABLE_OP able_to_banish.experience add 3}
			[unstore_unit]
				variable=able_to_banish
				find_vacant=no
				text=_ "+3 exp"
				red,green,blue=50,50,200
			[/unstore_unit]
			{CLEAR_VARIABLE able_to_banish}
			[fire_event]
				name=post banish
				[primary_unit]
					x,y=$x2,$y2
				[/primary_unit]
				[secondary_unit]
					x,y=$x1,$y1
				[/secondary_unit]
			[/fire_event]
    [/event]
	
    [event]
        first_time_only=no
		id=AE_mag_id_banish_event3
        name=attack end
		[filter_attack]
			special=AE_mag_id_banish
		[/filter_attack]

        [if]
		{VARIABLE_CONDITIONAL dg.length greater_than 0}
            [then]
				{VARIABLE dg.hitpoints $dg.max_hitpoints}
                [unstore_unit]
                    variable=dg
                    find_vacant=no
                [/unstore_unit]
                {CLEAR_VARIABLE dg}
            [/then]
        [/if]
    [/event]
	#defender
	[event]
        first_time_only=no
		id=AE_mag_id_banish_event4
        name=attack end
		[filter_second_attack]
			special=AE_mag_id_banish
		[/filter_second_attack]
		
        [if]
		{VARIABLE_CONDITIONAL dg.length greater_than 0}
            [then]
				{VARIABLE dg.hitpoints $dg.max_hitpoints}
                [unstore_unit]
                    variable=dg
                    find_vacant=no
                [/unstore_unit]
                {CLEAR_VARIABLE dg}
            [/then]
        [/if]
    [/event]
	
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef