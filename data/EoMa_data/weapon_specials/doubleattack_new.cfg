#textdomain wesnoth-Ageless_Era

#define AE_MAG_SECOND_ATTACK
    [set_variable]
        name=tmp_double_attack_unit_store.attacks_left
        add=1
    [/set_variable]

    [set_variables]
        name=tmp_double_attack_unit_store.variables
        mode=merge
        [value]
            double_attack_attacked=yes
            double_attack_turn=$turn_number
        [/value]
    [/set_variables]

    [unstore_unit]
        text= _ "double attack"
        {COLOR_HARM}
        variable=tmp_double_attack_unit_store
    [/unstore_unit]
#enddef

# wmllint: unbalanced-on
#define WEAPON_SPECIAL_AE_DOUBLE_ATTACK
    # wmlxgettext: [attack]
    # wmlxgettext: [specials]
    [dummy]
        id=AE_mag_double_attack
        name= _ "double attack"
        description=_"This unit can attack two enemies in one turn, but cannot move from a hex, where the first enemy was attacked."
    [/dummy]
[/specials]
[/attack]

[event]
    name=attack_end
    first_time_only=no
    id=AE_mag_double_attack_event
    [filter_attack]
        special=AE_mag_double_attack
    [/filter_attack]

    [store_unit]
        [filter]
            id=$unit.id
        [/filter]
        variable=tmp_double_attack_unit_store
    [/store_unit]

    [if]
        [variable]
            name=tmp_double_attack_unit_store.variables.double_attack_attacked
            boolean_not_equals=yes
        [/variable]

        [then]
            {AE_MAG_SECOND_ATTACK}
        [/then]

        [else]
            [if]
                [variable]
                    name=tmp_double_attack_unit_store.variables.double_attack_turn
                    not_equals=$turn_number
                [/variable]

                [then]
                    {AE_MAG_SECOND_ATTACK}
                [/then]
            [/if]
        [/else]
    [/if]
[/event]

[event]
    name=side turn
    first_time_only=no
    id=AE_mag_double_attack_event2
    [clear_variable]
        name=tmp_double_attack_unit_store
    [/clear_variable]
[/event]

[event]
    name=victory
    id=AE_mag_double_attack_event3
    [clear_variable]
        name=tmp_double_attack_unit_store
    [/clear_variable]
[/event]
[+attack]
    [+specials]
        # wmlxgettext: [/specials]
        # wmlxgettext: [/attack]
#enddef
# wmllint: unbalanced-off

#define SPLIT_FIRE_AE_MAG_SECOND_ATTACK ATTACK_NAME
    [set_variable]
        name=tmp_split_fire_unit_store.attacks_left
        add=1
    [/set_variable]

    [if]
        [variable]
            name=tmp_split_fire_unit_store.variables.split_fire_attacked
            boolean_not_equals=yes
        [/variable]

        [then]
            {FOREACH tmp_split_fire_unit_store.attack i}
                [if]
                    [variable]
                        name=tmp_split_fire_unit_store.attack[$i].name
                        not_equals={ATTACK_NAME}
                    [/variable]

                    [then]
                        [set_variable]
                            name=tmp_split_fire_unit_store.attack[$i].attack_weight
                            value=0
                        [/set_variable]
                    [/then]
                [/if]
            {NEXT i}
        [/then]
    [/if]

    [set_variables]
        name=tmp_split_fire_unit_store.variables
        mode=merge
        [value]
            split_fire_attacked=yes
            split_fire_turn=$turn_number
        [/value]
    [/set_variables]

    [unstore_unit]
        text= _ "second target"
        {COLOR_HARM}
        variable=tmp_split_fire_unit_store
    [/unstore_unit]
#enddef

# wmllint: unbalanced-on
#define WEAPON_SPECIAL_SPLIT_FIRE TYPE ATTACK_NAME
    # wmlxgettext: [attack]
    # wmlxgettext: [specials]
    [dummy]
        id=split fire
        name= _ "split fire"
        description=_"This unit can attack two enemies in one turn with this attack."
    [/dummy]
[/specials]
[/attack]

[event]
    name=side turn
    first_time_only=no

    [store_unit]
        [filter]
            type={TYPE}
        [/filter]
        variable=split_fire_unit_store
    [/store_unit]

    {FOREACH split_fire_unit_store i}
        [if]
            [variable]
                name=split_fire_unit_store[$i].variables.split_fire_attacked
                boolean_equals=yes
            [/variable]

            [then]
                {FOREACH split_fire_unit_store[$i].attack j}
                    [if]
                        [variable]
                            name=split_fire_unit_store[$i].attack[$j].name
                            not_equals={ATTACK_NAME}
                        [/variable]

                        [then]
                            [set_variable]
                                name=split_fire_unit_store[$i].attack[$j].attack_weight
                                add=1
                            [/set_variable]
                        [/then]
                    [/if]
                {NEXT j}

                [set_variable]
                    name=split_fire_unit_store[$i].variables.split_fire_attacked
                    value=no
                [/set_variable]

                [unstore_unit]
                    variable=split_fire_unit_store[$i]
                [/unstore_unit]
            [/then]
        [/if]
    {NEXT i}
[/event]

[event]
    name=attack_end
    first_time_only=no
    [filter_attack]
        special=split fire
    [/filter_attack]

    [filter]
        type={TYPE}
    [/filter]

    [store_unit]
        [filter]
            id=$unit.id
        [/filter]
        variable=tmp_split_fire_unit_store
    [/store_unit]

    [if]
        [variable]
            name=tmp_split_fire_unit_store.variables.split_fire_attacked
            boolean_not_equals=yes
        [/variable]

        [then]
            {SPLIT_FIRE_AE_MAG_SECOND_ATTACK {ATTACK_NAME} }
        [/then]

        [else]
            [if]
                [variable]
                    name=tmp_split_fire_unit_store.variables.split_fire_turn
                    not_equals=$turn_number
                [/variable]

                [then]
                    {SPLIT_FIRE_AE_MAG_SECOND_ATTACK {ATTACK_NAME} }
                [/then]
            [/if]
        [/else]
    [/if]
[/event]

[event]
    name=victory

    [clear_variable]
        name=tmp_split_fire_unit_store,split_fire_unit_store
    [/clear_variable]
[/event]
[+attack]
    [+specials]
        # wmlxgettext: [/specials]
        # wmlxgettext: [/attack]
#enddef
# wmllint: unbalanced-off
