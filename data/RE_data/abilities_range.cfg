#textdomain wesnoth
# Ability macros to be included in the SingleWML description of a unit.

#define AE_RHY_RANGE_MENU_ITEM DAMAGE

    #event: select/move ballista from current side, ballista can still attack-> store ballista

    [event]
        id=AE_rhy_select_range_ab
        name= select,moveto
        first_time_only=no
        [filter]
            side=$side_number
            ability=AE_rhy_range
            [filter_wml]
                attacks_left=1
            [/filter_wml]
        [/filter]
        [store_unit]
            variable=AE_rhy_ballista_unit
            [filter]
                x,y=$x1,$y1
            [/filter]
        [/store_unit]
    [/event]

    [set_menu_item]
        needs_select=yes
        id=AE_rhy_range_menu
        description="Fire arrow"
        [show_if]
            #only show when all conditions are met
            #enemy has visible unit on the field you click at

            [have_unit]
                [not]
                    side=$side_number
                [/not]
                x,y=$x1,$y1
                [filter_owner]
                    [enemy_of]
                        side=$side_number
                    [/enemy_of]
                [/filter_owner]
                [filter_vision]
                    visible=yes
                [/filter_vision]
            [/have_unit]

            #ballista is in radius 2 of the enemy it's shooting at
            #side and attacks_left should not be necessary, but left in to be sure

            [and]
                [have_location]
                    [and]
                        x,y=$x1,$y1
                        radius=2
                    [/and]
                    [and]
                        [filter]
                            find_in=AE_rhy_ballista_unit
                            side=$side_number
                            [filter_wml]
                                attacks_left=1
                            [/filter_wml]
                        [/filter]
                    [/and]
                [/have_location]
            [/and]

            #ballista is not next to the enemy it's shooting at
            #side and attacks_left should not be necessary, but left in to be sure

            [and]
                [not]
                    [have_location]
                        [and]
                            x,y=$x1,$y1
                            radius=1
                        [/and]
                        [and]
                            [filter]
                                find_in=AE_rhy_ballista_unit
                                side=$side_number
                                [filter_wml]
                                    attacks_left=1
                                [/filter_wml]
                            [/filter]
                        [/and]
                    [/have_location]
                [/not]
            [/and]
        [/show_if]

        [command]
            #gets enemies current defense, checks if rand. number < defense

            [set_variable]
                name=AE_rhy_chance
                rand=1..100
            [/set_variable]
            [store_unit]
                variable=AE_rhy_ballista_defender
                [filter]
                    x,y=$x1,$y1
                [/filter]
            [/store_unit]
            [store_unit_defense]
                id=$AE_rhy_ballista_defender.id
                loc_x=$x1
                loc_y=$y1
                variable=AE_rhy_ballista_defender_defense_var
            [/store_unit_defense]
            [if]
                #Hitchance is worse over large range -> -10%

                [variable]
                    name=AE_rhy_chance
                    less_than_equal_to=$AE_rhy_ballista_defender_defense_var-10
                [/variable]

                #If hit play hit animation, harm unit, units get exp

                [then]
                    [harm_unit]
                        [filter]
                            x,y=$x1,$y1
                        [/filter]
                        [filter_second]
                            find_in=AE_rhy_ballista_unit
                        [/filter_second]
                        amount= {DAMAGE}
                        damage_type=pierce
                        animate=yes
                        experience=yes
                        fire_event=yes
                        [primary_attack]
                            name=longshot
                        [/primary_attack]
                    [/harm_unit]
                [/then]

                #If miss units get exp, miss animation plays

                [else]
                    {VARIABLE_OP AE_rhy_ballista_defender.experience add $AE_rhy_ballista_unit.level}
                    [unstore_unit]
                        variable=AE_rhy_ballista_defender
                        find_vacant=no
                    [/unstore_unit]
                    [animate_unit]
                        flag=defend
                        [filter]
                            x,y=$x1,$y1
                        [/filter]
                        hits=no
                        [animate]
                            flag=attack
                            [filter]
                                find_in=AE_rhy_ballista_unit
                            [/filter]
                            hits=no
                            [primary_attack]
                                name=longshot
                            [/primary_attack]
                            [facing]
                                x,y=$x1,$y1
                            [/facing]
                        [/animate]
                    [/animate_unit]
                [/else]
            [/if]

            #ballista can not move or attack after this
            #it has to get exp extra, since the [harm_unit] exp would be lost through unstore

            {VARIABLE_OP AE_rhy_ballista_unit.attacks_left value 0}
            {VARIABLE_OP AE_rhy_ballista_unit.moves value 0}
            {VARIABLE_OP AE_rhy_ballista_unit.experience add $AE_rhy_ballista_defender.level}
            [unstore_unit]
                variable=AE_rhy_ballista_unit
                find_vacant=no
            [/unstore_unit]

            #clear variable to not shoot more than 1 time per turn per unit
            {CLEAR_VARIABLE AE_rhy_ballista_defender}
            {CLEAR_VARIABLE AE_rhy_ballista_unit}
        [/command]
    [/set_menu_item]
#enddef

#define SPECIAL_NOTES_RANGE
    _ "This unit can shoot bolts over large distances."
#enddef

#define AE_RHY_ABILITY_RANGE DAM
    #changes movetype smallfoot into mounted (exept for resistances)

    [dummy]
        id=AE_rhy_range
        name="range"
        description= _ "This unit can shoot bolts over large distances."
    [/dummy] # a hack to please wmlxgettext (using a bug in wmlxgettext!): dummy tag start: [abilities]
[/abilities]
[event]
    name=start
    [if]
        [have_unit]
            ability=AE_rhy_range
        [/have_unit]
        [then]
            {AE_RHY_RANGE_MENU_ITEM {DAM} }
        [/then]
    [/if]
[/event]
[event]
    name=side turn
    [if]
        [have_unit]
            ability=AE_rhy_range
        [/have_unit]
        [then]
            {AE_RHY_RANGE_MENU_ITEM {DAM} }
        [/then]
    [/if]
[/event]
[event]
    name=recruit
    [filter]
        ability=AE_rhy_range
    [/filter]
    {AE_RHY_RANGE_MENU_ITEM {DAM} }
[/event]
[event]
    name=post_advance
    [filter]
        ability=AE_rhy_range
    [/filter]
    {AE_RHY_RANGE_MENU_ITEM {DAM} }
[/event]
[+abilities]# a hack to please wmlgettext (using a bug in wmlgettext!): dummy tag end: [/abilities]
#enddef
